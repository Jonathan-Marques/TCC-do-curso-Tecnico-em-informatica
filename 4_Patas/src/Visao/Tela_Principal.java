/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Conexao.ConexaoBD;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Jonathan
 */
public class Tela_Principal extends javax.swing.JFrame {
    ConexaoBD conn = new ConexaoBD();
    FormUsuario use = new FormUsuario();
    PesqMedico pesq = new PesqMedico();
    FormPesqAnimal PesqAnimal = new FormPesqAnimal();
    FormCadRecipsonista formreci = new FormCadRecipsonista();
    FormFornecedor forne = new FormFornecedor();
    FormAgendamento ag = new FormAgendamento();
    FormeAgendaVeterinario av = new FormeAgendaVeterinario();
    FormAgenda tela = new FormAgenda();
    
    /**
     * Creates new form Tela_Principal
     */
    public Tela_Principal(String usuario) {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
              
        conn.conexao();
        jLabelUsuario.setText(usuario);
    }
    

    private Tela_Principal() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
           

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelUsuario = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCadastros = new javax.swing.JMenu();
        jMenuICadMedicos = new javax.swing.JMenuItem();
        jMenuItemCadVeterinario = new javax.swing.JMenuItem();
        jMenuCadPaciente = new javax.swing.JMenuItem();
        jMenuICadUsuarios = new javax.swing.JMenuItem();
        Fornecedor = new javax.swing.JMenuItem();
        jMenuRelatorios = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuSair = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelUsuario.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        getContentPane().add(jLabelUsuario, java.awt.BorderLayout.CENTER);

        jMenuCadastros.setText("Cadastros");

        jMenuICadMedicos.setText("Médicos Veterinários");
        jMenuICadMedicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuICadMedicosActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuICadMedicos);

        jMenuItemCadVeterinario.setText("Recipsonista");
        jMenuItemCadVeterinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCadVeterinarioActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuItemCadVeterinario);

        jMenuCadPaciente.setText("Paciente");
        jMenuCadPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCadPacienteActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuCadPaciente);

        jMenuICadUsuarios.setText("Usuarios");
        jMenuICadUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuICadUsuariosActionPerformed(evt);
            }
        });
        jMenuCadastros.add(jMenuICadUsuarios);

        Fornecedor.setText("Fornecedor");
        Fornecedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FornecedorActionPerformed(evt);
            }
        });
        jMenuCadastros.add(Fornecedor);

        jMenuBar1.add(jMenuCadastros);

        jMenuRelatorios.setText("Relatorios");
        jMenuBar1.add(jMenuRelatorios);

        jMenu1.setText("Agenda");

        jMenuItem3.setText("Agendamento");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setText("Atendimento agendado para hoje");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Agenda do Veterinario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenuSair.setText("Sair");
        jMenuSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuSairMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuSair);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(891, 632));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuICadMedicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuICadMedicosActionPerformed
        // TODO add your handling code here:
        
        try {
            conn.executaSQL("select * from usuarios where use_usuario='"+jLabelUsuario.getText()+"'");
            conn.rs.first();
            if (conn.rs.getString("use_tipo").equals("Administrador")){
               
                if(pesq==null){
                    pesq = new PesqMedico();
                    pesq.setVisible(true);
                    pesq.setResizable(false);
                 }else{
                    pesq.setVisible(true);
                    pesq.setResizable(false);
                }

                //PesqMedico pesq = new PesqMedico();
                //pesq.setVisible(true);  
            }else{
                JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!");
            }
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!"+ex);
        }
   
    }//GEN-LAST:event_jMenuICadMedicosActionPerformed

    private void jMenuSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuSairMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuSairMouseClicked

    private void jMenuICadUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuICadUsuariosActionPerformed
        // TODO add your handling code here:
        try {
            conn.executaSQL("select * from usuarios where use_usuario='"+jLabelUsuario.getText()+"'");
            conn.rs.first();
            if (conn.rs.getString("use_tipo").equals("Administrador")){
               
                if(use==null){
                    use = new FormUsuario();
                    use.setVisible(true);
                    use.setResizable(false);
                 }else{
                    use.setVisible(true);
                    use.setResizable(false);
                }

                //PesqMedico pesq = new PesqMedico();
                //pesq.setVisible(true);  
            }else{
                JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!");
            }
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!"+ex);
        }
    }//GEN-LAST:event_jMenuICadUsuariosActionPerformed

    private void jMenuCadPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCadPacienteActionPerformed
        // TODO add your handling code here:
                      
                if(PesqAnimal==null){
                    PesqAnimal = new FormPesqAnimal();
                    PesqAnimal.setVisible(true);
                    PesqAnimal.setResizable(false);
                 }else{
                    PesqAnimal.setVisible(true);
                    PesqAnimal.setResizable(false);
                }

                         
        
        
    }//GEN-LAST:event_jMenuCadPacienteActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        
      
        
                    if(tela==null){
                    tela = new FormAgenda();
                    tela.setVisible(true);
                    tela.setResizable(false);
                    }else{
                    tela.setVisible(true);
                   tela.setResizable(false);
                    }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
       
      
        
                    if(av==null){
                    av = new FormeAgendaVeterinario();
                    av.setVisible(true);
                    av.setResizable(false);
                    }else{
                    av.setVisible(true);
                    av.setResizable(false);
                    }
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
       
       
                    if(ag==null){
                    ag = new FormAgendamento();
                    ag.setVisible(true);
                    ag.setResizable(false);
                    }else{
                    ag.setVisible(true);
                    ag.setResizable(false);
                    }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItemCadVeterinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCadVeterinarioActionPerformed
        // TODO add your handling code here:
        try {
            conn.executaSQL("select * from usuarios where use_usuario='"+jLabelUsuario.getText()+"'");
            conn.rs.first();
            if (conn.rs.getString("use_tipo").equals("Administrador")){
               
                if(formreci==null){
                    formreci = new FormCadRecipsonista();
                    formreci.setVisible(true);
                    formreci.setResizable(false);
                 }else{
                    formreci.setVisible(true);
                    formreci.setResizable(false);
                }

                //PesqMedico pesq = new PesqMedico();
                //pesq.setVisible(true);  
            }else{
                JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!");
            }
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!"+ex);
        }
                  
    }//GEN-LAST:event_jMenuItemCadVeterinarioActionPerformed

    private void FornecedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FornecedorActionPerformed
        // TODO add your handling code here:
         try {
            conn.executaSQL("select * from usuarios where use_usuario='"+jLabelUsuario.getText()+"'");
            conn.rs.first();
            if (conn.rs.getString("use_tipo").equals("Administrador")){
        
                    if(forne==null){
                    forne = new FormFornecedor();
                   forne.setVisible(true);
                   forne.setResizable(false);
                 }else{
                    forne.setVisible(true);
                    forne.setResizable(false);
                    }
                     }else{
                JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!");
            }
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Você não tem permissão para acessar esta função! \n Contate o administrador do sistema!"+ex);
        }
    }//GEN-LAST:event_FornecedorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tela_Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tela_Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Fornecedor;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCadPaciente;
    private javax.swing.JMenu jMenuCadastros;
    private javax.swing.JMenuItem jMenuICadMedicos;
    private javax.swing.JMenuItem jMenuICadUsuarios;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItemCadVeterinario;
    private javax.swing.JMenu jMenuRelatorios;
    private javax.swing.JMenu jMenuSair;
    // End of variables declaration//GEN-END:variables
}
